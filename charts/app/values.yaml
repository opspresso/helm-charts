# Default values for sample.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

revisionHistoryLimit: 1

controller:
  kind: Deployment # Deployment or Rollout

  strategy: {}
    # rollingUpdate:
    #   maxSurge: 25%
    #   maxUnavailable: 25%
    # blueGreen:
    #   activeService: sample
    #   autoPromotionEnabled: true
    #   autoPromotionSeconds: 30
    #   previewService: sample-preview
    # canary:
    #   canaryService: sample-preview
    #   stableService: sample-stable
    #   steps:
    #   - setWeight: 25
    #   - pause:
    #       duration: 10
    #   - analysis:
    #       args:
    #       - name: url
    #         value: http://sample-preview:3000/success/95
    #       templates:
    #       - clusterScope: true
    #         templateName: http-benchmark
    #   - setWeight: 50
    #   - pause:
    #       duration: 10
    #   - setWeight: 75
    #   - pause:
    #       duration: 10

imagePullSecrets: []

image:
  repository: nginx
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart version.
  tag: ""

args: []
  # - --host
  # - 0.0.0.0

command: []
  # - "aws"
  # - "s3"
  # - "ls"

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

service:
  type: ClusterIP
  port: 80
  targetPort: 80

  preview:
    enabled: false

  stable:
    enabled: false

ingress:
  enabled: false
  # className: nginx
  annotations: {}
    # cert-manager.io/cluster-issuer: "letsencrypt-issuer"
    # kubernetes.io/ingress.class: "nginx"
    # kubernetes.io/ssl-redirect: "true"

  path: /
  pathType: Prefix

  hosts:
    - host: sample.domain.com

  preview:
    hosts:
      - host: sample-preview.domain.com

  stable:
    hosts:
      - host: sample-stable.domain.com

  tls: []
  #  - secretName: sample-tls
  #    hosts:
  #      - sample.domain.com

istio:
  sidecar:
    inject: false
  gateway:
    enabled: false

podLabels: {}

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

livenessProbe: {}
  # httpGet:
  #   path: /
  #   port: 3000
  # initialDelaySeconds: 3
  # periodSeconds: 10
  # failureThreshold: 3

readinessProbe: {}
  # httpGet:
  #   path: /
  #   port: 3000
  # initialDelaySeconds: 3
  # periodSeconds: 10
  # failureThreshold: 3

resources: {}
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  # limits:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  behavior: {}
    # scaleDown:
    #   policies:
    #     - periodSeconds: 60
    #       type: Percent
    #       value: 25
    #   stabilizationWindowSeconds: 600
  metrics: []
    # - resource:
    #     name: cpu
    #     target:
    #       averageUtilization: 60
    #       type: Utilization
    #   type: Resource

pdb:
  enabled: false
  maxUnavailable: 1

dnsPolicy: ClusterFirst # ClusterFirst, Default

restartPolicy: Always # Always, OnFailure, Never

nodeSelector: {}

tolerations: []

affinity: {}

serviceMonitor:
  enabled: false
  selector:
    release: prometheus-operator
  endpoints:
    - interval: 10s
      path: /metrics
      port: http

env: []
  # - name: MESSAGE
  #   value: "hello world"

configmap:
  enabled: false
  data: {}
    # MESSAGE: "hello world"

secret:
  enabled: false
  data: {}
    # SECRET_MESSAGE: "c2VjcmV0IG1lc3NhZ2U="

analysis:
  enabled: false
  # url: "http://sample-preview:3000/success/98"

externalSecrets:
  enabled: false
  backendType: systemManager
  data: []
    # - key: /k8s/common/admin-password
    #   name: admin-password

irsa:
  enabled: false
  statement: []
    # - resource: "arn:aws:s3:::irsa-sample"
    #   action:
    #     - "s3:Get*"
    #     - "s3:List*"
