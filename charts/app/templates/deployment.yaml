{{- if eq .Values.controller.kind "Rollout" }}
apiVersion: argoproj.io/v1alpha1
kind: Rollout
{{- else }}
apiVersion: apps/v1
kind: Deployment
{{- end }}
metadata:
  name: {{ include "app.fullname" . }}
  labels:
    {{- include "app.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      {{- include "app.selectorLabels" . | nindent 6 }}
  strategy:
    {{- if eq .Values.controller.strategy.type "BlueGreen" }}
    blueGreen:
      activeService: {{ include "app.fullname" . }}
      {{- if .Values.ingress.preview.enabled }}
      previewService: {{ include "app.fullname" . }}-preview
      {{- end }}
      {{- toYaml .Values.controller.strategy.blueGreen | nindent 6 }}
    {{- else if eq .Values.controller.strategy.type "Canary" }}
    canary:
      {{- if .Values.ingress.stable.enabled }}
      stableService: {{ include "app.fullname" . }}-stable
      {{- else }}
      stableService: {{ include "app.fullname" . }}
      {{- end }}
      {{- if .Values.ingress.preview.enabled }}
      canaryService: {{ include "app.fullname" . }}-preview
      {{- end }}
      {{- if and .Values.istio.gateway.enabled .Values.istio.canary.subsets }}
      trafficRouting:
        istio:
          virtualService:
            name: {{ include "app.fullname" . }}
            routes:
              - primary
          destinationRule:
            name: {{ include "app.fullname" . }}
            stableSubsetName: stable
            canarySubsetName: canary
      {{- end }}
      steps:
        {{- toYaml .Values.controller.strategy.canary.steps | nindent 8 }}
    {{- else }}
    rollingUpdate:
      {{- toYaml .Values.controller.strategy.rollingUpdate | nindent 6 }}
    {{- end }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "app.podLabels" . | nindent 8 }}
      {{- if .Values.podLabels }}
        {{- toYaml .Values.podLabels | nindent 8 }}
      {{- end }}
      {{- if .Values.istio.sidecar.inject }}
        sidecar.istio.io/inject: 'true'
      {{- end }}
    spec:
      containers:
        - name: app
          {{- with .Values.securityContext }}
          securityContext:
{{- toYaml . | nindent 12 }}
          {{- end }}
          image: {{ include "app.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
          {{- with .Values.args }}
          args:
{{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.command }}
          command:
{{- toYaml . | nindent 12 }}
          {{- end }}
          ports:
            - name: {{ .Values.service.name | default "http" }}
              containerPort: {{ .Values.service.targetPort | default "80" }}
              protocol: {{ .Values.service.protocol | default "TCP" }}
          {{- with .Values.livenessProbe }}
          livenessProbe:
{{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
{{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
{{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.env }}
          env:
{{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if or .Values.configmap.enabled .Values.secret.enabled .Values.externalSecrets.enabled }}
          envFrom:
            {{- if .Values.configmap.enabled }}
            - configMapRef:
                name: {{ include "app.fullname" . }}
            {{- end }}
            {{- if .Values.secret.enabled }}
            - secretRef:
                name: {{ include "app.fullname" . }}
            {{- end }}
            {{- if .Values.externalSecrets.enabled }}
            - secretRef:
                name: {{ include "app.fullname" . }}-external
            {{- end }}
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: {{ .Values.persistence.mountPath | quote }}
              subPath: {{ .Values.persistence.subPath | default "" }}
          {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
{{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "app.serviceAccountName" . }}
      {{- with .Values.securityContext }}
      securityContext:
{{- toYaml . | nindent 8 }}
      {{- end }}
      dnsPolicy: {{ .Values.dnsPolicy | default "ClusterFirst" }}
      restartPolicy: {{ .Values.restartPolicy | default "Always" }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
{{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
{{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
{{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: data
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "app.fullname" .) }}
          {{- else }}
          emptyDir: {}
          {{- end }}
      {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
